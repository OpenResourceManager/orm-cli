#!/usr/bin/env php
<?php

define('LARAVEL_START', microtime(true));

if (!defined('BASE_PATH')) {
    define('BASE_PATH', dirname(__DIR__));
}
if (!defined('VALID_CODES')) {
    define('VALID_CODES', [200, 201, 202, 204, 422]);
}
// Defines the ORM home based on OS
if (DIRECTORY_SEPARATOR == '/') {
    $home = $_SERVER['HOME'];
    if (!defined('ORM_HOME')) {
        // Define ORM Home for *nix
        define('ORM_HOME', implode('/', [$home, '.config', 'orm']));
    }
    if (!defined('ORM_DB_PATH')) {
        // Define ORM DB Path for *nix
        define('ORM_DB_PATH', implode('/', [ORM_HOME, 'orm.sqlite']));
    }
    if (!defined('ORM_CACHE_PATH')) {
        // Define ORM Cache Path for *nix
        define('ORM_CACHE_PATH', implode('/', [ORM_HOME, 'cache', 'data']));
    }
} else if (DIRECTORY_SEPARATOR == '\\') {
    $home = $_SERVER['USERPROFILE'];
    if (!defined('ORM_HOME')) {
        // Define ORM Home for win
        define('ORM_HOME', implode('\\', [$home, 'AppData', 'Roaming', 'orm']));
    }
    if (!defined('ORM_DB_PATH')) {
        // Define ORM Home for win
        define('ORM_DB_PATH', implode('\\', [ORM_HOME, 'orm.sqlite']));
    }
    if (!defined('ORM_CACHE_PATH')) {
        // Define ORM Cache Path for win
        define('ORM_CACHE_PATH', implode('\\', [ORM_HOME, 'cache', 'data']));
    }
}

/*
|--------------------------------------------------------------------------
| Register The Auto Loader
|--------------------------------------------------------------------------
|
| Composer provides a convenient, automatically generated class loader
| for our application. We just need to utilize it! We'll require it
| into the script here so that we do not have to worry about the
| loading of any our classes "manually". Feels great to relax.
|
*/

$autoloader = require file_exists(__DIR__.'/vendor/autoload.php') ?  __DIR__.'/vendor/autoload.php' : __DIR__.'/../../autoload.php';

$app = require_once __DIR__.'/bootstrap/app.php';

/*
|--------------------------------------------------------------------------
| Run The Artisan Application
|--------------------------------------------------------------------------
|
| When we run the console application, the current CLI command will be
| executed in this console and the response sent back to a terminal
| or another output device for the developers. Here goes nothing!
|
*/

$kernel = $app->make(Illuminate\Contracts\Console\Kernel::class);

$status = $kernel->handle(
    $input = new Symfony\Component\Console\Input\ArgvInput,
    new Symfony\Component\Console\Output\ConsoleOutput
);

/*
|--------------------------------------------------------------------------
| Shutdown The Application
|--------------------------------------------------------------------------
|
| Once Artisan has finished running, we will fire off the shutdown events
| so that any final work may be done by the application before we shut
| down the process. This is the last thing to happen to the request.
|
*/

$kernel->terminate($input, $status);

exit($status);
